name: CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: dom, curl, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          tools: composer:v2
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup Environment
        run: |
          cp .env.example .env
          touch database/database.sqlite

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Generate Ziggy Routes
        run: php artisan ziggy:generate

      - name: Run PHP Linting (Pint)
        run: vendor/bin/pint --test

      - name: Run JS Linting (ESLint)
        run: npm run lint

      - name: Run Frontend Tests (Vitest)
        run: npm test

      - name: Run Backend Tests (Pest)
        run: |
          php artisan config:clear
          ./vendor/bin/pest --parallel

      - name: Build Frontend Assets
        run: npm run build
